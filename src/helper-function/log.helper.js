const {
  displayDateTimeUTC,
  displayDateTimePakistan,
  displayDateTimeAustralia,
} = require("./time.helper");

function logTimeStamp() {
  const utcNow = displayDateTimeUTC();
  const pktNow = displayDateTimePakistan();
  const ausTime = displayDateTimeAustralia();

  console.log(
    `UTC Time: ~~~> ${utcNow} || ${utcNow.format(
      "dddd, MMMM Do YYYY, h:mm:ss a z"
    )} || ${utcNow.format()}`
  );
  console.log(
    `PKT Time: ~~~> ${pktNow} || ${pktNow.format(
      "dddd, MMMM Do YYYY, h:mm:ss a z"
    )} || ${pktNow.format()}`
  );
  console.log(
    `AUS Time: ~~~> ${ausTime} || ${ausTime.format(
      "dddd, MMMM Do YYYY, h:mm:ss a z"
    )} || ${ausTime.format()}`
  );
}

function logForDebug(type, value) {
  console.log(
    `????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????`
  );
  console.log(
    `??????????????????????????? ${type || "VALUE"} ???????????????????????????`
  );
  console.log(
    `????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????`
  );
  logTimeStamp();
  console.log(`????????????????????????????????????????????????????????????`);
  console.log(value);
  console.log(
    `????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????`
  );
  console.log("");
  console.log("");
}

function logForData(type, value) {
  console.log(
    `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
  );
  console.log(
    `~~~~~~~~~~~~~~~~~~~~~~~~~~~ ${type || "VALUE"} ~~~~~~~~~~~~~~~~~~~~~~~~~~~`
  );
  console.log(
    `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
  );
  logTimeStamp();
  console.log(`~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`);
  console.log(value);
  console.log(
    `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
  );
  console.log("");
}

function logForLabel(type, value) {
  console.log(
    `________________________________________________________________________________________________________________________________`
  );
  console.log(
    `___________________________ ${type || "Type"} ___________________________`
  );
  console.log(
    `________________________________________________________________________________________________________________________________`
  );
  console.log(value || "");
  console.log(
    `________________________________________________________________________________________________________________________________`
  );
  console.log("");
}

function logForSessionWithTime(type, value) {
  console.log(
    `********************************************************************************************************************************************************`
  );
  console.log(
    `*************************** ${type || "TYPE"} ***************************`
  );
  console.log(
    `********************************************************************************************************************************************************`
  );
  console.log(value || "");
  console.log(`*************************************************************`);
  logTimeStamp();
  console.log(
    `********************************************************************************************************************************************************`
  );
  console.log("");
}

function logForLabelWithTime(type, value) {
  console.log(
    `________________________________________________________________________________________________________________________________`
  );
  console.log(
    `___________________________ ${type || "Type"} ___________________________`
  );
  console.log(
    `________________________________________________________________________________________________________________________________`
  );
  console.log(value || "");
  console.log(`______________________________________________________________`);
  logTimeStamp();
  console.log(
    `________________________________________________________________________________________________________________________________`
  );
  console.log("");
}

const logForError = (type, value) => {
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠- ERROR ☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-`
  );
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  logTimeStamp();
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log(`☠-☠-☠-☠-☠-☠-☠-☠-☠-☠ ${type || "Type"} ☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`);
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log(value || "");
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠- ERROR ☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-`
  );
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log(
    `☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠-☠`
  );
  console.log("");
};

module.exports = {
  logForData,
  logForLabel,
  logForError,
  logForDebug,
  logForLabelWithTime,
  logForSessionWithTime,
};
